// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fleetspeak/src/client/stdinservice/proto/fleetspeak_stdinservice/messages.proto

package fleetspeak_stdinservice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import fleetspeak_monitoring "github.com/google/fleetspeak/fleetspeak/src/common/proto/fleetspeak_monitoring"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type InputMessage struct {
	// The data to be forwarded to the service.
	Input []byte `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	// Command line arguments.
	Args []string `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
}

func (m *InputMessage) Reset()                    { *m = InputMessage{} }
func (m *InputMessage) String() string            { return proto.CompactTextString(m) }
func (*InputMessage) ProtoMessage()               {}
func (*InputMessage) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *InputMessage) GetInput() []byte {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *InputMessage) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

type OutputMessage struct {
	Stdout        []byte                               `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr        []byte                               `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	ResourceUsage *fleetspeak_monitoring.ResourceUsage `protobuf:"bytes,3,opt,name=resource_usage,json=resourceUsage" json:"resource_usage,omitempty"`
}

func (m *OutputMessage) Reset()                    { *m = OutputMessage{} }
func (m *OutputMessage) String() string            { return proto.CompactTextString(m) }
func (*OutputMessage) ProtoMessage()               {}
func (*OutputMessage) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *OutputMessage) GetStdout() []byte {
	if m != nil {
		return m.Stdout
	}
	return nil
}

func (m *OutputMessage) GetStderr() []byte {
	if m != nil {
		return m.Stderr
	}
	return nil
}

func (m *OutputMessage) GetResourceUsage() *fleetspeak_monitoring.ResourceUsage {
	if m != nil {
		return m.ResourceUsage
	}
	return nil
}

func init() {
	proto.RegisterType((*InputMessage)(nil), "fleetspeak.stdinservice.InputMessage")
	proto.RegisterType((*OutputMessage)(nil), "fleetspeak.stdinservice.OutputMessage")
}

func init() {
	proto.RegisterFile("fleetspeak/src/client/stdinservice/proto/fleetspeak_stdinservice/messages.proto", fileDescriptor1)
}

var fileDescriptor1 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8f, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0x87, 0x49, 0xab, 0x05, 0xd7, 0xd6, 0xc3, 0x22, 0x1a, 0x3c, 0x85, 0xe2, 0x21, 0xa7, 0x2c,
	0xe8, 0xc5, 0xa3, 0x57, 0x11, 0x29, 0x04, 0x3c, 0x97, 0x98, 0x8e, 0x61, 0xb1, 0xbb, 0x13, 0x66,
	0x66, 0x7d, 0x0a, 0x1f, 0x5a, 0xf2, 0xc7, 0x64, 0xd5, 0xdb, 0x7e, 0xb3, 0xdf, 0xfc, 0x66, 0x46,
	0xed, 0xde, 0x8f, 0x00, 0xc2, 0x2d, 0x54, 0x1f, 0x86, 0xa9, 0x36, 0xf5, 0xd1, 0x82, 0x17, 0xc3,
	0x72, 0xb0, 0x9e, 0x81, 0x3e, 0x6d, 0x0d, 0xa6, 0x25, 0x14, 0x34, 0xb3, 0xb8, 0xff, 0xf5, 0xeb,
	0x80, 0xb9, 0x6a, 0x80, 0x8b, 0x5e, 0xd3, 0xd7, 0xb3, 0x57, 0xc4, 0xde, 0xcd, 0xe3, 0xdf, 0x49,
	0xe8, 0x1c, 0xfa, 0xff, 0xe1, 0x0e, 0xbd, 0x15, 0x24, 0xeb, 0x1b, 0x43, 0xc0, 0x18, 0xa8, 0x86,
	0x21, 0x7a, 0xfb, 0xa0, 0xd6, 0x4f, 0xbe, 0x0d, 0xf2, 0x32, 0x4c, 0xd4, 0x97, 0xea, 0xd4, 0x76,
	0x9c, 0x26, 0x59, 0x92, 0xaf, 0xcb, 0x01, 0xb4, 0x56, 0x27, 0x15, 0x35, 0x9c, 0x2e, 0xb2, 0x65,
	0x7e, 0x56, 0xf6, 0xef, 0xed, 0x57, 0xa2, 0x36, 0xbb, 0x20, 0x51, 0xef, 0x95, 0x5a, 0xb1, 0x1c,
	0x70, 0x6a, 0x1e, 0x69, 0xac, 0x03, 0x51, 0xba, 0x98, 0xea, 0x40, 0xa4, 0x9f, 0xd5, 0xc5, 0xcf,
	0x36, 0xfb, 0xd0, 0x25, 0xa4, 0xcb, 0x2c, 0xc9, 0xcf, 0xef, 0x6e, 0x8b, 0xe8, 0xde, 0x79, 0xf5,
	0xa2, 0x1c, 0xe5, 0xd7, 0xce, 0x2d, 0x37, 0x14, 0xe3, 0xdb, 0xaa, 0xbf, 0xe7, 0xfe, 0x3b, 0x00,
	0x00, 0xff, 0xff, 0xcb, 0xbb, 0x18, 0x5c, 0x7d, 0x01, 0x00, 0x00,
}
