// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fleetspeak/src/config/proto/fleetspeak_config/config.proto

package fleetspeak_config

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The configuration parameters needed by the config tool in order to create the
// artifacts needed to run a fleetspeak installation.
type Config struct {
	// An name for this installation, e.g. "Nascent" or "Nascent Staging". Used as
	// a sanity check to differentiate between installations, and may be included
	// in certificates, if certificates are generated. Required.
	ConfigurationName string `protobuf:"bytes,1,opt,name=configuration_name,json=configurationName,proto3" json:"configuration_name,omitempty"`
	// A file containing a PEM encoded certificate that clients should be
	// configured to trust. Typically a CA cert. If this file is not already
	// present, a 10 year self-signed CA certificate and associated private key
	// will be created.
	TrustedCertFile string `protobuf:"bytes,2,opt,name=trusted_cert_file,json=trustedCertFile,proto3" json:"trusted_cert_file,omitempty"`
	// A file containing the private key associated with trusted_cert_file, only
	// required if it is necessary to create server certificates.
	TrustedCertKeyFile string `protobuf:"bytes,3,opt,name=trusted_cert_key_file,json=trustedCertKeyFile,proto3" json:"trusted_cert_key_file,omitempty"`
	// A file containing a PEM encoded certificate that the Fleetspeak server
	// should use to identify itself. If this file is not already present, a 1
	// year certificate signed directly using the contents of
	// trusted_cert_?(key_)file will be created.
	ServerCertFile string `protobuf:"bytes,4,opt,name=server_cert_file,json=serverCertFile,proto3" json:"server_cert_file,omitempty"`
	// A file containing the private key associated with
	// server_cert_file. Required.
	ServerCertKeyFile    string   `protobuf:"bytes,5,opt,name=server_cert_key_file,json=serverCertKeyFile,proto3" json:"server_cert_key_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_412b712754868b22, []int{0}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (dst *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(dst, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetConfigurationName() string {
	if m != nil {
		return m.ConfigurationName
	}
	return ""
}

func (m *Config) GetTrustedCertFile() string {
	if m != nil {
		return m.TrustedCertFile
	}
	return ""
}

func (m *Config) GetTrustedCertKeyFile() string {
	if m != nil {
		return m.TrustedCertKeyFile
	}
	return ""
}

func (m *Config) GetServerCertFile() string {
	if m != nil {
		return m.ServerCertFile
	}
	return ""
}

func (m *Config) GetServerCertKeyFile() string {
	if m != nil {
		return m.ServerCertKeyFile
	}
	return ""
}

func init() {
	proto.RegisterType((*Config)(nil), "fleetspeak.config.Config")
}

func init() {
	proto.RegisterFile("fleetspeak/src/config/proto/fleetspeak_config/config.proto", fileDescriptor_config_412b712754868b22)
}

var fileDescriptor_config_412b712754868b22 = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xcb, 0xaa, 0xc2, 0x30,
	0x10, 0x86, 0xe9, 0x39, 0x5a, 0x30, 0x0b, 0xb5, 0x41, 0xa1, 0x4b, 0x71, 0x55, 0x04, 0x1b, 0xc4,
	0x9d, 0xdb, 0x82, 0x1b, 0xc1, 0x85, 0x2f, 0x10, 0x62, 0x9d, 0x4a, 0xe8, 0x25, 0x65, 0x92, 0x0a,
	0x7d, 0x6c, 0xdf, 0x40, 0x48, 0x4a, 0x2f, 0xab, 0x84, 0xff, 0xfb, 0xe6, 0x67, 0x18, 0x72, 0xc9,
	0x0a, 0x00, 0xa3, 0x6b, 0x10, 0x39, 0xd3, 0x98, 0xb2, 0x54, 0x55, 0x99, 0x7c, 0xb3, 0x1a, 0x95,
	0x51, 0x6c, 0x60, 0xbc, 0xcb, 0xdd, 0x13, 0x5b, 0x4c, 0x83, 0x81, 0xc7, 0x0e, 0xec, 0xbf, 0x1e,
	0xf1, 0x13, 0xfb, 0xa5, 0x47, 0x42, 0x5d, 0xd8, 0xa0, 0x30, 0x52, 0x55, 0xbc, 0x12, 0x25, 0x84,
	0xde, 0xce, 0x8b, 0x16, 0x8f, 0x60, 0x42, 0xee, 0xa2, 0x04, 0x7a, 0x20, 0x81, 0xc1, 0x46, 0x1b,
	0x78, 0xf1, 0x14, 0xd0, 0xf0, 0x4c, 0x16, 0x10, 0xfe, 0x59, 0x7b, 0xd5, 0x81, 0x04, 0xd0, 0x5c,
	0x65, 0x01, 0xf4, 0x44, 0xb6, 0x13, 0x37, 0x87, 0xd6, 0xf9, 0xff, 0xd6, 0xa7, 0x23, 0xff, 0x06,
	0xad, 0x1d, 0x89, 0xc8, 0x5a, 0x03, 0x7e, 0x00, 0x47, 0xed, 0x33, 0x6b, 0x2f, 0x5d, 0xde, 0x97,
	0x33, 0xb2, 0x19, 0x9b, 0x7d, 0xf7, 0xdc, 0x6d, 0x3e, 0xd8, 0x5d, 0xf5, 0xd3, 0xb7, 0xd7, 0x38,
	0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x53, 0x3e, 0x38, 0x1e, 0x4b, 0x01, 0x00, 0x00,
}
