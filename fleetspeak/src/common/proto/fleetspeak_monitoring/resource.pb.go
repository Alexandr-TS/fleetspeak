// Code generated by protoc-gen-go. DO NOT EDIT.
// source: resource.proto

package fleetspeak_monitoring

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type KillNotification_Reason int32

const (
	KillNotification_UNSPECIFIED       KillNotification_Reason = 0
	KillNotification_HEARTBEAT_FAILURE KillNotification_Reason = 1
	KillNotification_MEMORY_EXCEEDED   KillNotification_Reason = 2
)

var KillNotification_Reason_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "HEARTBEAT_FAILURE",
	2: "MEMORY_EXCEEDED",
}
var KillNotification_Reason_value = map[string]int32{
	"UNSPECIFIED":       0,
	"HEARTBEAT_FAILURE": 1,
	"MEMORY_EXCEEDED":   2,
}

func (x KillNotification_Reason) String() string {
	return proto.EnumName(KillNotification_Reason_name, int32(x))
}
func (KillNotification_Reason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_resource_ac35cd280f34499e, []int{2, 0}
}

// Contains resource-usage metrics for Fleetspeak clients. The stats are
// arrived at by aggregating raw data retrieved from the OS.
// CPU-usage is in milliseconds per second, and memory usage is in bytes.
type AggregatedResourceUsage struct {
	MeanUserCpuRate      float64  `protobuf:"fixed64,1,opt,name=mean_user_cpu_rate,json=meanUserCpuRate" json:"mean_user_cpu_rate,omitempty"`
	MaxUserCpuRate       float64  `protobuf:"fixed64,2,opt,name=max_user_cpu_rate,json=maxUserCpuRate" json:"max_user_cpu_rate,omitempty"`
	MeanSystemCpuRate    float64  `protobuf:"fixed64,3,opt,name=mean_system_cpu_rate,json=meanSystemCpuRate" json:"mean_system_cpu_rate,omitempty"`
	MaxSystemCpuRate     float64  `protobuf:"fixed64,4,opt,name=max_system_cpu_rate,json=maxSystemCpuRate" json:"max_system_cpu_rate,omitempty"`
	MeanResidentMemory   float64  `protobuf:"fixed64,5,opt,name=mean_resident_memory,json=meanResidentMemory" json:"mean_resident_memory,omitempty"`
	MaxResidentMemory    int64    `protobuf:"varint,6,opt,name=max_resident_memory,json=maxResidentMemory" json:"max_resident_memory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AggregatedResourceUsage) Reset()         { *m = AggregatedResourceUsage{} }
func (m *AggregatedResourceUsage) String() string { return proto.CompactTextString(m) }
func (*AggregatedResourceUsage) ProtoMessage()    {}
func (*AggregatedResourceUsage) Descriptor() ([]byte, []int) {
	return fileDescriptor_resource_ac35cd280f34499e, []int{0}
}
func (m *AggregatedResourceUsage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregatedResourceUsage.Unmarshal(m, b)
}
func (m *AggregatedResourceUsage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregatedResourceUsage.Marshal(b, m, deterministic)
}
func (dst *AggregatedResourceUsage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregatedResourceUsage.Merge(dst, src)
}
func (m *AggregatedResourceUsage) XXX_Size() int {
	return xxx_messageInfo_AggregatedResourceUsage.Size(m)
}
func (m *AggregatedResourceUsage) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregatedResourceUsage.DiscardUnknown(m)
}

var xxx_messageInfo_AggregatedResourceUsage proto.InternalMessageInfo

func (m *AggregatedResourceUsage) GetMeanUserCpuRate() float64 {
	if m != nil {
		return m.MeanUserCpuRate
	}
	return 0
}

func (m *AggregatedResourceUsage) GetMaxUserCpuRate() float64 {
	if m != nil {
		return m.MaxUserCpuRate
	}
	return 0
}

func (m *AggregatedResourceUsage) GetMeanSystemCpuRate() float64 {
	if m != nil {
		return m.MeanSystemCpuRate
	}
	return 0
}

func (m *AggregatedResourceUsage) GetMaxSystemCpuRate() float64 {
	if m != nil {
		return m.MaxSystemCpuRate
	}
	return 0
}

func (m *AggregatedResourceUsage) GetMeanResidentMemory() float64 {
	if m != nil {
		return m.MeanResidentMemory
	}
	return 0
}

func (m *AggregatedResourceUsage) GetMaxResidentMemory() int64 {
	if m != nil {
		return m.MaxResidentMemory
	}
	return 0
}

// A fleetspeak.Message with message type "ResourceUsage" is sent regularly by
// the system and daemon services to the server, to report the performance of
// processes.
//
// Next tag: 9
type ResourceUsageData struct {
	// Name of the client service that resource usage is charged/attributed to
	// e.g 'system' for the system Fleetspeak service, or the name of a daemon
	// service as specified in its config.
	Scope string `protobuf:"bytes,1,opt,name=scope" json:"scope,omitempty"`
	Pid   int64  `protobuf:"varint,2,opt,name=pid" json:"pid,omitempty"`
	// The self reported service/service binary version.
	Version string `protobuf:"bytes,8,opt,name=version" json:"version,omitempty"`
	// Time when the process was started by Fleetspeak.
	ProcessStartTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=process_start_time,json=processStartTime" json:"process_start_time,omitempty"`
	// Corresponds to when computation of the resource-usage data was finalized.
	DataTimestamp *timestamp.Timestamp     `protobuf:"bytes,4,opt,name=data_timestamp,json=dataTimestamp" json:"data_timestamp,omitempty"`
	ResourceUsage *AggregatedResourceUsage `protobuf:"bytes,5,opt,name=resource_usage,json=resourceUsage" json:"resource_usage,omitempty"`
	// Optional debug info for the process.
	DebugStatus string `protobuf:"bytes,6,opt,name=debug_status,json=debugStatus" json:"debug_status,omitempty"`
	// If true, indicates that the process has terminated, and that this is
	// the final resource-usage report for that process.
	ProcessTerminated    bool     `protobuf:"varint,7,opt,name=process_terminated,json=processTerminated" json:"process_terminated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceUsageData) Reset()         { *m = ResourceUsageData{} }
func (m *ResourceUsageData) String() string { return proto.CompactTextString(m) }
func (*ResourceUsageData) ProtoMessage()    {}
func (*ResourceUsageData) Descriptor() ([]byte, []int) {
	return fileDescriptor_resource_ac35cd280f34499e, []int{1}
}
func (m *ResourceUsageData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceUsageData.Unmarshal(m, b)
}
func (m *ResourceUsageData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceUsageData.Marshal(b, m, deterministic)
}
func (dst *ResourceUsageData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceUsageData.Merge(dst, src)
}
func (m *ResourceUsageData) XXX_Size() int {
	return xxx_messageInfo_ResourceUsageData.Size(m)
}
func (m *ResourceUsageData) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceUsageData.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceUsageData proto.InternalMessageInfo

func (m *ResourceUsageData) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *ResourceUsageData) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *ResourceUsageData) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ResourceUsageData) GetProcessStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.ProcessStartTime
	}
	return nil
}

func (m *ResourceUsageData) GetDataTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.DataTimestamp
	}
	return nil
}

func (m *ResourceUsageData) GetResourceUsage() *AggregatedResourceUsage {
	if m != nil {
		return m.ResourceUsage
	}
	return nil
}

func (m *ResourceUsageData) GetDebugStatus() string {
	if m != nil {
		return m.DebugStatus
	}
	return ""
}

func (m *ResourceUsageData) GetProcessTerminated() bool {
	if m != nil {
		return m.ProcessTerminated
	}
	return false
}

// Sent by clients when a service gets killed by Fleetspeak, e.g. for using
// too much memory.
type KillNotification struct {
	Service string `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	Pid     int64  `protobuf:"varint,2,opt,name=pid" json:"pid,omitempty"`
	// The self-reported version of the service.
	Version string `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
	// Time when the process was started by Fleetspeak.
	ProcessStartTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=process_start_time,json=processStartTime" json:"process_start_time,omitempty"`
	// Time when the process was killed by Fleetspeak.
	KilledWhen           *timestamp.Timestamp    `protobuf:"bytes,5,opt,name=killed_when,json=killedWhen" json:"killed_when,omitempty"`
	Reason               KillNotification_Reason `protobuf:"varint,6,opt,name=reason,enum=fleetspeak.monitoring.KillNotification_Reason" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *KillNotification) Reset()         { *m = KillNotification{} }
func (m *KillNotification) String() string { return proto.CompactTextString(m) }
func (*KillNotification) ProtoMessage()    {}
func (*KillNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_resource_ac35cd280f34499e, []int{2}
}
func (m *KillNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KillNotification.Unmarshal(m, b)
}
func (m *KillNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KillNotification.Marshal(b, m, deterministic)
}
func (dst *KillNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KillNotification.Merge(dst, src)
}
func (m *KillNotification) XXX_Size() int {
	return xxx_messageInfo_KillNotification.Size(m)
}
func (m *KillNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_KillNotification.DiscardUnknown(m)
}

var xxx_messageInfo_KillNotification proto.InternalMessageInfo

func (m *KillNotification) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *KillNotification) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *KillNotification) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *KillNotification) GetProcessStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.ProcessStartTime
	}
	return nil
}

func (m *KillNotification) GetKilledWhen() *timestamp.Timestamp {
	if m != nil {
		return m.KilledWhen
	}
	return nil
}

func (m *KillNotification) GetReason() KillNotification_Reason {
	if m != nil {
		return m.Reason
	}
	return KillNotification_UNSPECIFIED
}

func init() {
	proto.RegisterType((*AggregatedResourceUsage)(nil), "fleetspeak.monitoring.AggregatedResourceUsage")
	proto.RegisterType((*ResourceUsageData)(nil), "fleetspeak.monitoring.ResourceUsageData")
	proto.RegisterType((*KillNotification)(nil), "fleetspeak.monitoring.KillNotification")
	proto.RegisterEnum("fleetspeak.monitoring.KillNotification_Reason", KillNotification_Reason_name, KillNotification_Reason_value)
}

func init() { proto.RegisterFile("resource.proto", fileDescriptor_resource_ac35cd280f34499e) }

var fileDescriptor_resource_ac35cd280f34499e = []byte{
	// 565 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0xdf, 0x6e, 0xd3, 0x3e,
	0x14, 0xfe, 0xa5, 0xd9, 0xba, 0xcd, 0xfd, 0xad, 0x4b, 0xbd, 0x4d, 0x44, 0xbb, 0x61, 0xf4, 0x6a,
	0x08, 0x2d, 0x43, 0xe3, 0x92, 0xab, 0xb2, 0x66, 0x5a, 0x05, 0x1d, 0xc8, 0x6d, 0x05, 0x5c, 0x45,
	0x6e, 0x72, 0x9a, 0x59, 0x4b, 0xe2, 0xc8, 0x76, 0x46, 0xf7, 0x0c, 0x3c, 0x0e, 0xef, 0xc5, 0x33,
	0x20, 0x3b, 0x49, 0x4b, 0x2b, 0x56, 0x21, 0xee, 0xea, 0xf3, 0xfd, 0x69, 0xce, 0xf7, 0x1d, 0xd4,
	0x16, 0x20, 0x79, 0x21, 0x42, 0xf0, 0x72, 0xc1, 0x15, 0xc7, 0xc7, 0xb3, 0x04, 0x40, 0xc9, 0x1c,
	0xe8, 0xbd, 0x97, 0xf2, 0x8c, 0x29, 0x2e, 0x58, 0x16, 0x9f, 0x3c, 0x8f, 0x39, 0x8f, 0x13, 0xb8,
	0x30, 0xa4, 0x69, 0x31, 0xbb, 0x50, 0x2c, 0x05, 0xa9, 0x68, 0x9a, 0x97, 0xba, 0xee, 0x8f, 0x06,
	0x7a, 0xd6, 0x8b, 0x63, 0x01, 0x31, 0x55, 0x10, 0x91, 0xca, 0x74, 0x22, 0x69, 0x0c, 0xf8, 0x15,
	0xc2, 0x29, 0xd0, 0x2c, 0x28, 0x24, 0x88, 0x20, 0xcc, 0x8b, 0x40, 0x50, 0x05, 0xae, 0x75, 0x6a,
	0x9d, 0x59, 0xe4, 0x40, 0x23, 0x13, 0x09, 0xe2, 0x2a, 0x2f, 0x08, 0x55, 0x80, 0x5f, 0xa2, 0x4e,
	0x4a, 0xe7, 0x6b, 0xdc, 0x86, 0xe1, 0xb6, 0x53, 0x3a, 0xff, 0x9d, 0x7a, 0x81, 0x8e, 0x8c, 0xaf,
	0x7c, 0x94, 0x0a, 0xd2, 0x25, 0xdb, 0x36, 0xec, 0x8e, 0xc6, 0x46, 0x06, 0xaa, 0x05, 0xe7, 0xe8,
	0x50, 0x7b, 0xaf, 0xf3, 0xb7, 0x0c, 0xdf, 0x49, 0xe9, 0x7c, 0x95, 0xfe, 0xba, 0xf2, 0x17, 0x20,
	0x59, 0x04, 0x99, 0x0a, 0x52, 0x48, 0xb9, 0x78, 0x74, 0xb7, 0x0d, 0xdf, 0xec, 0x44, 0x2a, 0x68,
	0x68, 0x10, 0xec, 0x95, 0x7f, 0xb0, 0x2e, 0x68, 0x9e, 0x5a, 0x67, 0x36, 0xd1, 0x7b, 0xad, 0xf2,
	0xbb, 0xdf, 0x6d, 0xd4, 0x59, 0xc9, 0xaa, 0x4f, 0x15, 0xc5, 0x47, 0x68, 0x5b, 0x86, 0x3c, 0x2f,
	0x23, 0xda, 0x23, 0xe5, 0x03, 0x3b, 0xc8, 0xce, 0x59, 0x64, 0xa2, 0xb0, 0x89, 0xfe, 0x89, 0x5d,
	0xb4, 0xf3, 0x00, 0x42, 0x32, 0x9e, 0xb9, 0xbb, 0x86, 0x59, 0x3f, 0xf1, 0x0d, 0xc2, 0xb9, 0xe0,
	0x21, 0x48, 0x19, 0x48, 0x45, 0x85, 0x0a, 0x74, 0x5d, 0x26, 0x97, 0xd6, 0xe5, 0x89, 0x57, 0x76,
	0xe9, 0xd5, 0x5d, 0x7a, 0xe3, 0xba, 0x4b, 0xe2, 0x54, 0xaa, 0x91, 0x16, 0xe9, 0x31, 0xee, 0xa1,
	0x76, 0x44, 0x15, 0x0d, 0x16, 0x7d, 0x9b, 0xb4, 0x36, 0xbb, 0xec, 0x6b, 0xc5, 0xe2, 0x89, 0x27,
	0xcb, 0x23, 0x0b, 0x0a, 0xbd, 0xa4, 0x09, 0xb0, 0x75, 0xe9, 0x79, 0x7f, 0xbc, 0x35, 0xef, 0x89,
	0x33, 0x22, 0xfb, 0x62, 0xe5, 0xaa, 0x5e, 0xa0, 0xff, 0x23, 0x98, 0x16, 0xb1, 0xde, 0x50, 0x15,
	0xd2, 0x84, 0xbc, 0x47, 0x5a, 0x66, 0x36, 0x32, 0x23, 0x7c, 0xbe, 0x8c, 0x41, 0x81, 0x48, 0x59,
	0xa6, 0x4d, 0xdd, 0x9d, 0x53, 0xeb, 0x6c, 0x97, 0x74, 0x2a, 0x64, 0xbc, 0x00, 0xba, 0x3f, 0x1b,
	0xc8, 0x79, 0xcf, 0x92, 0xe4, 0x96, 0x2b, 0x36, 0x63, 0x21, 0x55, 0x3a, 0x4a, 0x17, 0xed, 0x48,
	0x10, 0x0f, 0x2c, 0xac, 0xeb, 0xa8, 0x9f, 0x9b, 0x0b, 0xb1, 0xff, 0xa6, 0x90, 0xad, 0x7f, 0x28,
	0xe4, 0x2d, 0x6a, 0xdd, 0xb3, 0x24, 0x81, 0x28, 0xf8, 0x76, 0x07, 0x59, 0x15, 0xe5, 0x26, 0x0b,
	0x54, 0xd2, 0x3f, 0xdf, 0x41, 0x86, 0xaf, 0x51, 0x53, 0x00, 0x95, 0x3c, 0x33, 0x69, 0xb5, 0x9f,
	0xac, 0x60, 0x3d, 0x05, 0x8f, 0x18, 0x15, 0xa9, 0xd4, 0x5d, 0x1f, 0x35, 0xcb, 0x09, 0x3e, 0x40,
	0xad, 0xc9, 0xed, 0xe8, 0x93, 0x7f, 0x35, 0xb8, 0x1e, 0xf8, 0x7d, 0xe7, 0x3f, 0x7c, 0x8c, 0x3a,
	0x37, 0x7e, 0x8f, 0x8c, 0xdf, 0xf9, 0xbd, 0x71, 0x70, 0xdd, 0x1b, 0x7c, 0x98, 0x10, 0xdf, 0xb1,
	0xf0, 0x21, 0x3a, 0x18, 0xfa, 0xc3, 0x8f, 0xe4, 0x6b, 0xe0, 0x7f, 0xb9, 0xf2, 0xfd, 0xbe, 0xdf,
	0x77, 0x1a, 0xd3, 0xa6, 0xf9, 0xdc, 0x37, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0xdf, 0xa7, 0x06,
	0x2f, 0x85, 0x04, 0x00, 0x00,
}
