// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fleetspeak/src/common/proto/fleetspeak/common.proto

/*
Package fleetspeak is a generated protocol buffer package.

It is generated from these files:
	fleetspeak/src/common/proto/fleetspeak/common.proto
	fleetspeak/src/common/proto/fleetspeak/system.proto

It has these top-level messages:
	Address
	Message
	MessageResult
	Label
	Signature
	WrappedContactData
	ContactData
	EmptyMessage
	MessageAckData
	MessageErrorData
	ClientInfoData
	RemoveServiceData
	SignedClientServiceConfig
	ClientServiceConfig
	ClientServiceConfigs
	RevokedCertificateList
*/
package fleetspeak

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The message priority. The primary effect is on the ordering of messages
// sent from the client to the server.
type Message_Priority int32

const (
	Message_MEDIUM Message_Priority = 0
	Message_LOW    Message_Priority = 1
	Message_HIGH   Message_Priority = 2
)

var Message_Priority_name = map[int32]string{
	0: "MEDIUM",
	1: "LOW",
	2: "HIGH",
}
var Message_Priority_value = map[string]int32{
	"MEDIUM": 0,
	"LOW":    1,
	"HIGH":   2,
}

func (x Message_Priority) String() string {
	return proto.EnumName(Message_Priority_name, int32(x))
}
func (Message_Priority) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

// An Address identifies the source or destination of a message.
type Address struct {
	// The client_id, if the address refers to a service on a client. If unset,
	// the address refers to a service on the server.
	ClientId []byte `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// The name of the fleetspeak service which sent or should receive the
	// message.  Required.
	ServiceName string `protobuf:"bytes,2,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Address) GetClientId() []byte {
	if m != nil {
		return m.ClientId
	}
	return nil
}

func (m *Address) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

type Message struct {
	// A hash based on origin and origin_message_id. It is set by the fleetspeak
	// system on message intake and may be used for deduplication.
	MessageId []byte `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// The source of the messages. Required.
	Source *Address `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
	// An sequence of bytes set by the source in a way to uniquely identify the
	// message among all messages with the same origin.
	SourceMessageId []byte `protobuf:"bytes,3,opt,name=source_message_id,json=sourceMessageId,proto3" json:"source_message_id,omitempty"`
	// The destination of the message. Required.
	Destination *Address `protobuf:"bytes,4,opt,name=destination" json:"destination,omitempty"`
	// The type of message. This field is mostly opaque to the Fleetspeak system,
	// but can be used for some statistics gathering. It is recommended that each
	// service define a static collection of short readable message types and
	// dispatch according to this when processing messages. e.g. "ResourceUsage",
	// "StdOutputData".
	MessageType string `protobuf:"bytes,5,opt,name=message_type,json=messageType" json:"message_type,omitempty"`
	// Set when the message enters the FS system.
	CreationTime *google_protobuf1.Timestamp `protobuf:"bytes,6,opt,name=creation_time,json=creationTime" json:"creation_time,omitempty"`
	// The data associated with this request, accepted types are determined by the
	// service and may depend on message_type. Not typically stored after the
	// message is processed.
	Data *google_protobuf.Any `protobuf:"bytes,7,opt,name=data" json:"data,omitempty"`
	// Additional validation information, set by on the server by the (optional)
	// authorizer component based on WrappedContactData.validators, etc.
	ValidationInfo string `protobuf:"bytes,8,opt,name=validation_info,json=validationInfo" json:"validation_info,omitempty"`
	// The result of processing the message. Set once processing has finished.
	Result   *MessageResult   `protobuf:"bytes,9,opt,name=result" json:"result,omitempty"`
	Priority Message_Priority `protobuf:"varint,10,opt,name=priority,enum=fleetspeak.Message_Priority" json:"priority,omitempty"`
	// A background message does not count as activity when deciding how fast to
	// poll the server. This flag should be set on messages which are unlikely to
	// trigger additional activity.
	Background bool `protobuf:"varint,11,opt,name=background" json:"background,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Message) GetMessageId() []byte {
	if m != nil {
		return m.MessageId
	}
	return nil
}

func (m *Message) GetSource() *Address {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Message) GetSourceMessageId() []byte {
	if m != nil {
		return m.SourceMessageId
	}
	return nil
}

func (m *Message) GetDestination() *Address {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *Message) GetMessageType() string {
	if m != nil {
		return m.MessageType
	}
	return ""
}

func (m *Message) GetCreationTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreationTime
	}
	return nil
}

func (m *Message) GetData() *google_protobuf.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Message) GetValidationInfo() string {
	if m != nil {
		return m.ValidationInfo
	}
	return ""
}

func (m *Message) GetResult() *MessageResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *Message) GetPriority() Message_Priority {
	if m != nil {
		return m.Priority
	}
	return Message_MEDIUM
}

func (m *Message) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

type MessageResult struct {
	// The time that processing finished.
	ProcessedTime *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=processed_time,json=processedTime" json:"processed_time,omitempty"`
	// Set when processing ended with a permanent failure.
	Failed bool `protobuf:"varint,3,opt,name=failed" json:"failed,omitempty"`
	// A human readable error message, normally set when failed is true.
	FailedReason string `protobuf:"bytes,4,opt,name=failed_reason,json=failedReason" json:"failed_reason,omitempty"`
}

func (m *MessageResult) Reset()                    { *m = MessageResult{} }
func (m *MessageResult) String() string            { return proto.CompactTextString(m) }
func (*MessageResult) ProtoMessage()               {}
func (*MessageResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MessageResult) GetProcessedTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.ProcessedTime
	}
	return nil
}

func (m *MessageResult) GetFailed() bool {
	if m != nil {
		return m.Failed
	}
	return false
}

func (m *MessageResult) GetFailedReason() string {
	if m != nil {
		return m.FailedReason
	}
	return ""
}

// A Label is a tag assigned to a client by a plugin. Primary use is to limit
// broadcasts to specific clients.
type Label struct {
	// The service which set this label.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	// A free form tag choosen by the setting plugin.
	Label string `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
}

func (m *Label) Reset()                    { *m = Label{} }
func (m *Label) String() string            { return proto.CompactTextString(m) }
func (*Label) ProtoMessage()               {}
func (*Label) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Label) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *Label) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type Signature struct {
	Certificate []byte `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
	Algorithm   int32  `protobuf:"varint,2,opt,name=algorithm" json:"algorithm,omitempty"`
	// algorithm. https://golang.org/pkg/crypto/x509/#SignatureAlgorithm
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *Signature) Reset()                    { *m = Signature{} }
func (m *Signature) String() string            { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()               {}
func (*Signature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Signature) GetCertificate() []byte {
	if m != nil {
		return m.Certificate
	}
	return nil
}

func (m *Signature) GetAlgorithm() int32 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

func (m *Signature) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// A WrappedContactData is provided by the client to the server with every
// contact.
type WrappedContactData struct {
	ContactData []byte       `protobuf:"bytes,1,opt,name=contact_data,json=contactData,proto3" json:"contact_data,omitempty"`
	Signatures  []*Signature `protobuf:"bytes,2,rep,name=signatures" json:"signatures,omitempty"`
	// contact_data.
	ClientLabels []string `protobuf:"bytes,3,rep,name=client_labels,json=clientLabels" json:"client_labels,omitempty"`
}

func (m *WrappedContactData) Reset()                    { *m = WrappedContactData{} }
func (m *WrappedContactData) String() string            { return proto.CompactTextString(m) }
func (*WrappedContactData) ProtoMessage()               {}
func (*WrappedContactData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *WrappedContactData) GetContactData() []byte {
	if m != nil {
		return m.ContactData
	}
	return nil
}

func (m *WrappedContactData) GetSignatures() []*Signature {
	if m != nil {
		return m.Signatures
	}
	return nil
}

func (m *WrappedContactData) GetClientLabels() []string {
	if m != nil {
		return m.ClientLabels
	}
	return nil
}

// On every contact, the client and server exchange ContactData messages.
type ContactData struct {
	// During every contact, the server passes a random sequencing_nonce to the
	// client, and the client provides the sequencing_nonce to the server during
	// the next contact.
	SequencingNonce uint64     `protobuf:"varint,1,opt,name=sequencing_nonce,json=sequencingNonce" json:"sequencing_nonce,omitempty"`
	Messages        []*Message `protobuf:"bytes,2,rep,name=messages" json:"messages,omitempty"`
	// Records the client's current time setting, as of the creation of this
	// ContactData. Only set by the client.
	ClientClock *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=client_clock,json=clientClock" json:"client_clock,omitempty"`
}

func (m *ContactData) Reset()                    { *m = ContactData{} }
func (m *ContactData) String() string            { return proto.CompactTextString(m) }
func (*ContactData) ProtoMessage()               {}
func (*ContactData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ContactData) GetSequencingNonce() uint64 {
	if m != nil {
		return m.SequencingNonce
	}
	return 0
}

func (m *ContactData) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *ContactData) GetClientClock() *google_protobuf1.Timestamp {
	if m != nil {
		return m.ClientClock
	}
	return nil
}

// An empty message, typically used as a trivial RPC response.
type EmptyMessage struct {
}

func (m *EmptyMessage) Reset()                    { *m = EmptyMessage{} }
func (m *EmptyMessage) String() string            { return proto.CompactTextString(m) }
func (*EmptyMessage) ProtoMessage()               {}
func (*EmptyMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func init() {
	proto.RegisterType((*Address)(nil), "fleetspeak.Address")
	proto.RegisterType((*Message)(nil), "fleetspeak.Message")
	proto.RegisterType((*MessageResult)(nil), "fleetspeak.MessageResult")
	proto.RegisterType((*Label)(nil), "fleetspeak.Label")
	proto.RegisterType((*Signature)(nil), "fleetspeak.Signature")
	proto.RegisterType((*WrappedContactData)(nil), "fleetspeak.WrappedContactData")
	proto.RegisterType((*ContactData)(nil), "fleetspeak.ContactData")
	proto.RegisterType((*EmptyMessage)(nil), "fleetspeak.EmptyMessage")
	proto.RegisterEnum("fleetspeak.Message_Priority", Message_Priority_name, Message_Priority_value)
}

func init() {
	proto.RegisterFile("fleetspeak/src/common/proto/fleetspeak/common.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 699 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0x5d, 0x6f, 0xdb, 0x36,
	0x14, 0x9d, 0xfc, 0x29, 0x5f, 0xd9, 0x8e, 0xc7, 0x64, 0x83, 0x92, 0x65, 0x9b, 0xa3, 0x3d, 0xcc,
	0xd9, 0x00, 0x1b, 0x4b, 0x10, 0x60, 0x2f, 0xc3, 0x16, 0x24, 0xc1, 0x62, 0x20, 0xce, 0x06, 0x35,
	0x45, 0x1e, 0x05, 0x9a, 0xa2, 0x5d, 0x22, 0x12, 0xa9, 0x8a, 0x74, 0x00, 0xff, 0x8a, 0x3e, 0xf4,
	0x47, 0xb4, 0x3f, 0xb3, 0x10, 0x49, 0xd9, 0x6a, 0x93, 0xb6, 0x6f, 0xe4, 0xb9, 0xe7, 0x1e, 0xde,
	0x7b, 0x7c, 0x64, 0x38, 0x5d, 0x24, 0x94, 0x2a, 0x99, 0x51, 0xfc, 0x30, 0x91, 0x39, 0x99, 0x10,
	0x91, 0xa6, 0x82, 0x4f, 0xb2, 0x5c, 0x28, 0x31, 0xa9, 0xd4, 0x0c, 0x3e, 0xd6, 0x38, 0x82, 0x6d,
	0xe1, 0x60, 0x7f, 0x29, 0xc4, 0x32, 0xa1, 0xa6, 0x63, 0xbe, 0x5a, 0x4c, 0x30, 0x5f, 0x1b, 0xda,
	0xc1, 0xcf, 0x9f, 0x96, 0x14, 0x4b, 0xa9, 0x54, 0x38, 0xcd, 0x0c, 0x21, 0x98, 0x42, 0xfb, 0x3c,
	0x8e, 0x73, 0x2a, 0x25, 0xfa, 0x01, 0x3a, 0x24, 0x61, 0x94, 0xab, 0x88, 0xc5, 0xbe, 0x33, 0x74,
	0x46, 0xdd, 0xd0, 0x35, 0xc0, 0x34, 0x46, 0x47, 0xd0, 0x95, 0x34, 0x7f, 0x64, 0x84, 0x46, 0x1c,
	0xa7, 0xd4, 0xaf, 0x0d, 0x9d, 0x51, 0x27, 0xf4, 0x2c, 0x76, 0x8b, 0x53, 0x1a, 0xbc, 0x6b, 0x40,
	0x7b, 0x46, 0xa5, 0xc4, 0x4b, 0x8a, 0x7e, 0x04, 0x48, 0xcd, 0x71, 0x2b, 0xd6, 0xb1, 0xc8, 0x34,
	0x46, 0xbf, 0x43, 0x4b, 0x8a, 0x55, 0x4e, 0x8c, 0x8e, 0x77, 0xb2, 0x3b, 0xde, 0xae, 0x33, 0xb6,
	0xf3, 0x84, 0x96, 0x82, 0x7e, 0x83, 0x6f, 0xcd, 0x29, 0xaa, 0x48, 0xd6, 0xb5, 0xe4, 0x8e, 0x29,
	0xcc, 0x36, 0xc2, 0x67, 0xe0, 0xc5, 0x54, 0x2a, 0xc6, 0xb1, 0x62, 0x82, 0xfb, 0x8d, 0xcf, 0xab,
	0x57, 0x79, 0xc5, 0x76, 0xa5, 0xb6, 0x5a, 0x67, 0xd4, 0x6f, 0x9a, 0xed, 0x2c, 0x76, 0xb7, 0xce,
	0x28, 0xfa, 0x1b, 0x7a, 0x24, 0xa7, 0x9a, 0x1e, 0x15, 0x26, 0xfa, 0x2d, 0xad, 0x7d, 0x30, 0x36,
	0x0e, 0x8f, 0x4b, 0x87, 0xc7, 0x77, 0xa5, 0xc3, 0x61, 0xb7, 0x6c, 0x28, 0x20, 0x34, 0x82, 0x46,
	0x8c, 0x15, 0xf6, 0xdb, 0xba, 0x6f, 0xef, 0x49, 0xdf, 0x39, 0x5f, 0x87, 0x9a, 0x81, 0x7e, 0x85,
	0x9d, 0x47, 0x9c, 0xb0, 0xd8, 0x3c, 0xc6, 0xf8, 0x42, 0xf8, 0xae, 0x1e, 0xa8, 0xbf, 0x85, 0xa7,
	0x7c, 0x21, 0xd0, 0x1f, 0xd0, 0xca, 0xa9, 0x5c, 0x25, 0xca, 0xef, 0x68, 0xd1, 0xfd, 0xea, 0xa2,
	0xd6, 0x94, 0x50, 0x13, 0x42, 0x4b, 0x44, 0x7f, 0x82, 0x9b, 0xe5, 0x4c, 0xe4, 0x4c, 0xad, 0x7d,
	0x18, 0x3a, 0xa3, 0xfe, 0xc9, 0xe1, 0x33, 0x4d, 0xe3, 0xff, 0x2d, 0x27, 0xdc, 0xb0, 0xd1, 0x4f,
	0x00, 0x73, 0x4c, 0x1e, 0x96, 0xb9, 0x58, 0xf1, 0xd8, 0xf7, 0x86, 0xce, 0xc8, 0x0d, 0x2b, 0x48,
	0x70, 0x0c, 0x6e, 0xd9, 0x85, 0x00, 0x5a, 0xb3, 0xab, 0xcb, 0xe9, 0xcb, 0xd9, 0xe0, 0x1b, 0xd4,
	0x86, 0xfa, 0xcd, 0x7f, 0xf7, 0x03, 0x07, 0xb9, 0xd0, 0xb8, 0x9e, 0xfe, 0x7b, 0x3d, 0xa8, 0x05,
	0x6f, 0x1c, 0xe8, 0x7d, 0x34, 0x1e, 0x3a, 0x87, 0x7e, 0x96, 0x0b, 0x42, 0xa5, 0xa4, 0xb1, 0xb1,
	0xb7, 0xf6, 0x55, 0x7b, 0x7b, 0x9b, 0x0e, 0xed, 0xef, 0xf7, 0xd0, 0x5a, 0x60, 0x96, 0x50, 0x93,
	0x0d, 0x37, 0xb4, 0x37, 0xf4, 0x0b, 0xf4, 0xcc, 0x29, 0xca, 0x29, 0x96, 0x36, 0x14, 0x9d, 0xb0,
	0x6b, 0xc0, 0x50, 0x63, 0xc1, 0x3f, 0xd0, 0xbc, 0xc1, 0x73, 0x9a, 0x3c, 0xc9, 0xb9, 0xf3, 0x24,
	0xe7, 0x68, 0x0f, 0x9a, 0x49, 0xc1, 0xb5, 0xdf, 0x80, 0xb9, 0x04, 0x0c, 0x3a, 0x2f, 0xd8, 0x92,
	0x63, 0xb5, 0xca, 0x29, 0x1a, 0x82, 0x47, 0x68, 0xae, 0xd8, 0x82, 0x11, 0xac, 0xa8, 0xcd, 0x7f,
	0x15, 0x42, 0x87, 0xd0, 0xc1, 0xc9, 0xb2, 0x70, 0xeb, 0x55, 0xaa, 0x85, 0x9a, 0xe1, 0x16, 0x28,
	0xaa, 0xb2, 0x14, 0xb3, 0x51, 0xdf, 0x02, 0xc1, 0x5b, 0x07, 0xd0, 0x7d, 0x8e, 0xb3, 0x8c, 0xc6,
	0x17, 0x82, 0x2b, 0x4c, 0xd4, 0x65, 0x11, 0x9b, 0x23, 0xe8, 0x12, 0x73, 0x8d, 0x74, 0xd0, 0xca,
	0x57, 0x2b, 0x94, 0x33, 0x80, 0x8d, 0x8c, 0xf4, 0x6b, 0xc3, 0xfa, 0xc8, 0x3b, 0xf9, 0xae, 0xfa,
	0xfb, 0x6f, 0x56, 0x08, 0x2b, 0xc4, 0xc2, 0x42, 0xfb, 0xcf, 0xa0, 0x77, 0x95, 0x7e, 0x7d, 0x58,
	0x2f, 0x2c, 0x34, 0xa0, 0x36, 0x4e, 0x06, 0xef, 0x1d, 0xf0, 0xaa, 0xe3, 0x1c, 0xc3, 0x40, 0xd2,
	0xd7, 0x2b, 0xca, 0x09, 0xe3, 0xcb, 0x88, 0x0b, 0x4e, 0x8c, 0x11, 0x8d, 0x70, 0x67, 0x8b, 0xdf,
	0x16, 0x30, 0x9a, 0x80, 0x6b, 0x3f, 0xb5, 0x72, 0xa8, 0xdd, 0xe7, 0x92, 0xbc, 0x21, 0xa1, 0xbf,
	0xc0, 0xbe, 0x1d, 0x91, 0x44, 0x90, 0x07, 0x6d, 0xd1, 0x97, 0xc3, 0xe2, 0x19, 0xfe, 0x45, 0x41,
	0x0f, 0xfa, 0xd0, 0xbd, 0x4a, 0x33, 0xb5, 0xb6, 0xc2, 0xf3, 0x96, 0x6e, 0x38, 0xfd, 0x10, 0x00,
	0x00, 0xff, 0xff, 0x3e, 0xe2, 0xeb, 0xe5, 0x8a, 0x05, 0x00, 0x00,
}
