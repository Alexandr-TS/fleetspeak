# Fleetspeak server plugin configuration file.  This is a text format
# fleetspeak.plugins.Config protocol buffer.

####
#### Datastore, exactly one is required:
####

# The sqlite datastore is meant for integration testing and other small,
# single-server deployments. Most production users should use the mysql option.

#datastore {
#  path: "/usr/lib/fleetspeak-server/sqlite.so"
#  factory_name: "Factory"
#  
#  # For the sqlite datastore, the config string is the path to the database
#  config: "/var/lib/fleetspeak-server/database.sqlite3"
#}

#datastore {
#  path: "/usr/lib/fleetspeak-server/mysql.so"
#  factory_name: "Factory"
#  
#  # For the sqlite datastore, the config string described the database connection,
#  # e.g.: "<user>:<pass>@tcp(<host>)/<db>".
#  #
#  # See https://github.com/go-sql-driver/mysql#usage for more details.
#  config: "/var/lib/fleetspeak-server/database.sqlite3"
#}

####
#### Communicator, at least one is required:
####

communicator {
  path: "/usr/lib/fleetspeak-server/https.so"

  # The HTTPSFactory expects clients to connect directly to this server over
  # https. If you will be running behind a loadbalancer/reverse proxy supporting
  # the haproxy 'Proxy' protocol you should enable this in your loadbalancer and
  # change this to 'ProxyHTTPSFactory.
  #
  # Note that while ProxyHTTPSFactory will accept connections directly from
  # endpoints, it effectively allows them to spoof their ip and therefore it is
  # recommended to only use this when the server itself is firewalled to be
  # accessible only through a loadbalancer.
  factory_name: "HTTPSFactory"

  # This config string is the path of a network configuration file containing the
  # server key and certificate.
  config: "/etc/fleetspeak-server/https.config
}

