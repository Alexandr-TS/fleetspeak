# Fleetspeak server plugin configuration file.  This is a text format
# fleetspeak.plugins.Config protocol buffer.

####
#### Datastore, exactly one is required:
####

# This chooses where Fleetspeak's persistent state is store. The sqlite
# datastore is meant for integration testing and other small, single-server
# deployments. Most production users should use the mysql option.

#datastore {
#  path: "/usr/lib/fleetspeak-server/sqlite.so"
#  factory_name: "Factory"
#  
#  # For the sqlite datastore, the config string is the path to the database
#  config: "/var/lib/fleetspeak-server/database.sqlite3"
#}

#datastore {
#  path: "/usr/lib/fleetspeak-server/mysql.so"
#  factory_name: "Factory"
#  
#  # For the sqlite datastore, the config string described the database connection,
#  # e.g.: "<user>:<pass>@tcp(<host>)/<db>".
#  #
#  # See https://github.com/go-sql-driver/mysql#usage for more details.
#  config: "/var/lib/fleetspeak-server/database.sqlite3"
#}

####
#### Communicator, at least one is required:
####

communicator {
  path: "/usr/lib/fleetspeak-server/https.so"

  # The HTTPSFactory expects clients to connect directly to this server over
  # https. If you will be running behind a loadbalancer/reverse proxy supporting
  # the haproxy 'Proxy' protocol you should enable this protocol in your
  # loadbalancer and change factory_name to 'ProxyHTTPSFactory.
  #
  # Note that while ProxyHTTPSFactory will accept connections directly from
  # endpoints, it effectively allows them to spoof their ip. Therefore, when
  # using the ProxyHTTPSFactory, it is recommended to keep the server itself
  # firewalled to be accessible only through a loadbalancer.
  factory_name: "HTTPSFactory"

  # This config string is the path of a network configuration file containing the
  # server key and certificate.
  config: "/etc/fleetspeak-server/https.config
}

####
#### ServiceFactories, at least one is required.
####

# The loaded ServiceFactories determine what types of services are possible, for
# example the GRPCServiceFactory contains the code needed to install a service
# which passes messages to another process through a specific GRPC
# protocol. Services are configured in the server configuration file.

# GRPC
service_factory {
  path: "/usr/lib/fleetspeak-server/grpc.so"
  factory_name: "GRPCServiceFactoryFactory"  
}

####
#### Authorizer, optional.
####

# This LabelFilter is a simple authorizer which only alows in clients
# with a specific label. It can be replaced with a more complex authorizer to
# provide more nuanced filtering, DOS protection, etc.
#authorizer {
#  path: "/usr/lib/fleetspeak-server/authorizer.so"
#  factory_name: "LabelFilter"
#  
# # The label filter authorizer will only allow connection from clients
# # reporting with this label.
#  config: "<label>"
#}
